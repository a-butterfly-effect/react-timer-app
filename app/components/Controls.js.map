{"version":3,"sources":["Controls.jsx"],"names":[],"mappings":";;AAAA,IAAI,QAAQ,QAAQ,OAAR,CAAZ;;AAEA,IAAI,WAAW,MAAM,WAAN,CAAkB;AAAA;;AAC7B,eAAgB;AACZ,yBAAiB,MAAM,SAAN,CAAgB,MAAhB,CAAuB,UAD5B;AAEZ,wBAAiB,MAAM,SAAN,CAAgB,IAAhB,CAAqB;AAF1B,KADa;AAK7B;AACA;AACA;AACA;AACA,oBAAgB,wBAAU,SAAV,EAAqB;AAAA;;AACjC,eAAO,YAAM;AACT;AACA;AACA,kBAAK,KAAL,CAAW,cAAX,CAA0B,SAA1B;AACA;AACH,SALD;AAMH,KAhB4B;AAiB7B,+BAA4B,mCAAU,QAAV,EAAoB;AAC5C;AACH,KAnB4B;AAoB7B,YAAgB,kBAAY;AAAA;;AAAA,YACnB,eADmB,GACA,KAAK,KADL,CACnB,eADmB;;AAGxB;;AACA,YAAI,wBAAwB,SAAxB,qBAAwB,GAAM;AAC9B,gBAAI,oBAAoB,SAAxB,EAAmC;AAC/B,uBAAO;AAAA;AAAA,sBAAQ,WAAU,kBAAlB,EAAqC,SAAS,OAAK,cAAL,CAAoB,QAApB,CAA9C;AAAA;AAAA,iBAAP;AACH,aAFD,MAEO,IAAI,oBAAoB,QAAxB,EAAkC;AACrC,uBAAO;AAAA;AAAA,sBAAQ,WAAU,gBAAlB,EAAmC,SAAS,OAAK,cAAL,CAAoB,SAApB,CAA5C;AAAA;AAAA,iBAAP;AACH;AACJ,SAND;;AAQA;AACA,eACI;AAAA;AAAA,cAAK,WAAU,UAAf;AACK,mCADL;AAEI;AAAA;AAAA,kBAAQ,WAAU,qBAAlB,EAAwC,SAAS,KAAK,cAAL,CAAoB,SAApB,CAAjD;AAAA;AAAA;AAFJ,SADJ;AAMH;;AAvC4B,CAAlB,CAAf;;AA2CA,OAAO,OAAP,GAAiB,QAAjB","file":"Controls.js","sourcesContent":["let React = require('react');\r\n\r\nlet Controls = React.createClass({\r\n    propTypes     : {\r\n        countdownStatus: React.PropTypes.string.isRequired,\r\n        onStatusChange : React.PropTypes.func.isRequired\r\n    },\r\n    // Currying function\r\n    // The return value of onStatusChange is a function that is going to get called\r\n    // when the person clicks the button\r\n    // We're using a function to generate a different function\r\n    onStatusChange: function (newStatus) {\r\n        return () => {\r\n            // this.props.onStatusChange is what is passed from the parent component which is a function\r\n            // and this is what is called when someone clicks a button\r\n            this.props.onStatusChange(newStatus);\r\n            ;\r\n        };\r\n    },\r\n    componentWillReceiveProps : function (newProps) {\r\n        // console.log('componentWillReceiveProps', newProps.countdownStatus);\r\n    },\r\n    render        : function () {\r\n        let {countdownStatus} = this.props;\r\n\r\n        // Render the correct buttons according to the current status\r\n        let renderStartStopButton = () => {\r\n            if (countdownStatus === 'started') {\r\n                return <button className=\"button secondary\" onClick={this.onStatusChange('paused')}>Pause</button>;\r\n            } else if (countdownStatus === 'paused') {\r\n                return <button className=\"button primary\" onClick={this.onStatusChange('started')}>Start</button>;\r\n            }\r\n        };\r\n\r\n        // Always render clear button in the beginning\r\n        return (\r\n            <div className=\"controls\">\r\n                {renderStartStopButton()}\r\n                <button className=\"button alert hollow\" onClick={this.onStatusChange('stopped')}>Clear</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = Controls;"]}